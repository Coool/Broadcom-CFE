
; Fields
; 
; 1 : Address of register.  $ is replaced by the instance index from the !agent line
; 2 : Subinstance of subsystem (DMA chan within MAC), '*' if only one subinstance
; 3 : Printing function name suffix (print_subsystem_suffix)
; 4 : Description string
;
;
; note: if you add new agents, add them at the *end* of this file.
; If you don't do that, you'll need to rebuild all of the VAPI
; diagnostics since the bitmask will be different.
;


!agent MC 0,1,2,3
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CONFIG)		*	NULL		"Config"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS_START)		*	NULL		"CS Start
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS_END)		*	NULL		"CS End"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS01_ROW0)		*	NULL		"CS01 Row 0"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS01_ROW1)		*	NULL		"CS01 Row 1"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS01_COL0)		*	NULL		"CS01 Column 0"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS01_COL1)		*	NULL		"CS01 Column 1"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS01_BA)		*	NULL		"CS01 Banks"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS23_ROW0)		*	NULL		"CS23 Row 0"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS23_ROW1)		*	NULL		"CS23 Row 1"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS23_COL0)		*	NULL		"CS23 Column 0"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS23_COL1)		*	NULL		"CS23 Column 1"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_CS23_BA)		*	NULL		"CS23 Banks"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_DRAMCMD)		*	NULL		"DRAM Command"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_DRAMMODE)		*	NULL		"DRAM Mode"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_MCLK_CFG)		*	NULL		"MCLK Config"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_TIMING1)		*	NULL		"DRAM Timing1"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_TIMING2)		*	NULL		"DRAM Timing2"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_ODT)		*	NULL		"ODT"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_DLL_CFG)		*	NULL		"DLL Config"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_DRIVE_CFG)		*	NULL		"Drive Config"
A_BCM1480_MC_REGISTER($,R_BCM1480_MC_ECC_STATUS)	*	NULL		"ECC Status"
!endagent

!agent MCGLOBAL
A_BCM1480_MC_GLB_CONFIG             *	NULL	"Global Configuration"
A_BCM1480_MC_GLB_INTLV              *	NULL	"Channel Interleave"
A_BCM1480_MC_GLB_ECC_STATUS         *	NULL	"ECC Status"
A_BCM1480_MC_GLB_ECC_ADDR           *	NULL	"ECC Error Address"
A_BCM1480_MC_GLB_ECC_CORRECT        *	NULL	"ECC Correct Control"
A_BCM1480_MC_GLB_PERF_CNT_CONTROL   *	NULL	"Perf Counter Control"
!endagent

!agent L2
A_BCM1480_L2_READ_TAG				*	NULL		"Read Tag"
A_BCM1480_L2_ECC_TAG				*	NULL		"ECC Tag"
A_BCM1480_L2_MISC0_VALUE			*	NULL		"Misc0 Value"
A_BCM1480_L2_MISC1_VALUE			*	NULL		"Misc1 Value"
A_BCM1480_L2_MISC2_VALUE			*	NULL		"Misc2 Value"
A_BCM1480_L2_MISC_CONFIG			*	NULL		"Misc Config"
!endagent

!agent MACDMA 0
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_CONFIG0)        TX0   NULL      "Config 0"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_CONFIG1)        TX0   NULL      "Config 1"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_DSCR_BASE)      TX0   NULL      "Descriptor Base"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_DSCR_CNT)       TX0   NULL      "Descriptor Count"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_CUR_DSCRA)      TX0   NULL      "Cur DSCR_A"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_CUR_DSCRB)      TX0   NULL      "Cur DSCR_B"
A_MAC_DMA_REGISTER($,DMA_TX,0,R_MAC_DMA_CUR_DSCRADDR)   TX0   NULL      "Cur Dscr Addr"

A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_CONFIG0)        TX1   NULL      "Config 0"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_CONFIG1)        TX1   NULL      "Config 1"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_DSCR_BASE)      TX1   NULL      "Descriptor Base"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_DSCR_CNT)       TX1   NULL      "Descriptor Count"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_CUR_DSCRA)      TX1   NULL      "Cur DSCR_A"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_CUR_DSCRB)      TX1   NULL      "Cur DSCR_B"
A_MAC_DMA_REGISTER($,DMA_TX,1,R_MAC_DMA_CUR_DSCRADDR)   TX1   NULL      "Cur Dscr Addr"

A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_CONFIG0)        RX0   NULL      "Config 0"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_CONFIG1)        RX0   NULL      "Config 1"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_DSCR_BASE)      RX0   NULL      "Descriptor Base"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_DSCR_CNT)       RX0   NULL      "Descriptor Count"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_CUR_DSCRA)      RX0   NULL      "Cur DSCR_A"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_CUR_DSCRB)      RX0   NULL      "Cur DSCR_B"
A_MAC_DMA_REGISTER($,DMA_RX,0,R_MAC_DMA_CUR_DSCRADDR)   RX0   NULL      "Cur Dscr Addr"

A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_CONFIG0)        RX1   NULL      "Config 0"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_CONFIG1)        RX1   NULL      "Config 1"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_DSCR_BASE)      RX1   NULL      "Descriptor Base"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_DSCR_CNT)       RX1   NULL      "Descriptor Count"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_CUR_DSCRA)      RX1   NULL      "Cur DSCR_A"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_CUR_DSCRB)      RX1   NULL      "Cur DSCR_B"
A_MAC_DMA_REGISTER($,DMA_RX,1,R_MAC_DMA_CUR_DSCRADDR)   RX1   NULL      "Cur Dscr Addr"
!endagent


!agent MACRMON 0
A_MAC_REGISTER($,R_MAC_RMON_TX_BYTES)		*	NULL	"RMON TX Bytes"
A_MAC_REGISTER($,R_MAC_RMON_COLLISIONS)		*	NULL	"RMON Collisions"
A_MAC_REGISTER($,R_MAC_RMON_LATE_COL)		*	NULL	"RMON Late Coll"
A_MAC_REGISTER($,R_MAC_RMON_EX_COL)		*	NULL	"RMON Excess Coll"
A_MAC_REGISTER($,R_MAC_RMON_FCS_ERROR)		*	NULL	"RMON FCS Error"
A_MAC_REGISTER($,R_MAC_RMON_TX_ABORT)		*	NULL	"RMON TX Abort"
A_MAC_REGISTER($,R_MAC_RMON_TX_BAD)		*	NULL	"RMON TX Bad"
A_MAC_REGISTER($,R_MAC_RMON_TX_GOOD)		*	NULL	"RMON TX Good"
A_MAC_REGISTER($,R_MAC_RMON_TX_RUNT)		*	NULL	"RMON TX Runt"
A_MAC_REGISTER($,R_MAC_RMON_TX_OVERSIZE)	*	NULL	"RMON TX Oversize"
A_MAC_REGISTER($,R_MAC_RMON_RX_BYTES)		*	NULL	"RMON RX Bytes"
A_MAC_REGISTER($,R_MAC_RMON_RX_MCAST)		*	NULL	"RMON RX Mcast"
A_MAC_REGISTER($,R_MAC_RMON_RX_BCAST)		*	NULL	"RMON RX Bcast"
A_MAC_REGISTER($,R_MAC_RMON_RX_BAD)		*	NULL	"RMON RX Bad"
A_MAC_REGISTER($,R_MAC_RMON_RX_GOOD)		*	NULL	"RMON RX Good"
A_MAC_REGISTER($,R_MAC_RMON_RX_RUNT)		*	NULL	"RMON RX Runt"
A_MAC_REGISTER($,R_MAC_RMON_RX_OVERSIZE)	*	NULL	"RMON RX Oversize"
A_MAC_REGISTER($,R_MAC_RMON_RX_FCS_ERROR)	*	NULL	"RMON RX FCS Error"
A_MAC_REGISTER($,R_MAC_RMON_RX_LENGTH_ERROR)	*	NULL	"RMON RX Length Error"
A_MAC_REGISTER($,R_MAC_RMON_RX_CODE_ERROR)	*	NULL	"RMON RX Code Error"
A_MAC_REGISTER($,R_MAC_RMON_RX_ALIGN_ERROR)	*	NULL	"RMON RX Align Error"
!endagent

!agent MAC 0,1,2,3
A_MAC_REGISTER($,R_MAC_CFG)			*	NULL	"MAC Config"
A_MAC_REGISTER($,R_MAC_THRSH_CFG)		*	NULL	"MAC Thresh Config"
A_MAC_REGISTER($,R_MAC_VLANTAG)			*	NULL	"VLAN Tag"
A_MAC_REGISTER($,R_MAC_FRAMECFG)		*	NULL	"Frame Config"
;A_MAC_REGISTER($,R_MAC_EOPCNT)			*	NULL	"EOP Count"
;A_MAC_REGISTER($,R_MAC_FIFO_PTRS)		*	NULL	"FIFO Pointers"
A_MAC_REGISTER($,R_MAC_ADFILTER_CFG)		*	NULL	"Address Filter"
A_MAC_REGISTER($,R_MAC_ETHERNET_ADDR)		*	NULL	"Ethernet Addr"
A_MAC_REGISTER($,R_MAC_PKT_TYPE)		*	NULL	"Packet Type"
A_MAC_REGISTER($,R_MAC_HASH_BASE+0)		*	NULL	"Hash 0"
A_MAC_REGISTER($,R_MAC_HASH_BASE+8)		*	NULL	"Hash 1"
A_MAC_REGISTER($,R_MAC_HASH_BASE+16)		*	NULL	"Hash 2"
A_MAC_REGISTER($,R_MAC_HASH_BASE+24)		*	NULL	"Hash 3"
A_MAC_REGISTER($,R_MAC_HASH_BASE+32)		*	NULL	"Hash 4"
A_MAC_REGISTER($,R_MAC_HASH_BASE+40)		*	NULL	"Hash 5"
A_MAC_REGISTER($,R_MAC_HASH_BASE+48)		*	NULL	"Hash 6"
A_MAC_REGISTER($,R_MAC_HASH_BASE+56)		*	NULL	"Hash 7"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+0)		*	NULL	"Addr 0"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+8)		*	NULL	"Addr 1"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+16)		*	NULL	"Addr 2"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+24)		*	NULL	"Addr 3"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+32)		*	NULL	"Addr 4"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+40)		*	NULL	"Addr 5"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+48)		*	NULL	"Addr 6"
A_MAC_REGISTER($,R_MAC_ADDR_BASE+56)		*	NULL	"Addr 7"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+0)		*	NULL	"CHLO 0"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+8)		*	NULL	"CHLO 1"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+16)		*	NULL	"CHLO 2"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+24)		*	NULL	"CHLO 3"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+32)		*	NULL	"CHLO 4"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+40)		*	NULL	"CHLO 5"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+48)		*	NULL	"CHLO 6"
A_MAC_REGISTER($,R_MAC_CHLO0_BASE+56)		*	NULL	"CHLO 7"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+0)		*	NULL	"CHUP 0"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+8)		*	NULL	"CHUP 1"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+16)		*	NULL	"CHUP 2"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+24)		*	NULL	"CHUP 3"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+32)		*	NULL	"CHUP 4"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+40)		*	NULL	"CHUP 5"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+48)		*	NULL	"CHUP 6"
A_MAC_REGISTER($,R_MAC_CHUP0_BASE+56)		*	NULL	"CHUP 7"
A_MAC_REGISTER($,R_MAC_ENABLE)			*	NULL	"MAC Enable"
A_MAC_REGISTER($,R_MAC_STATUS)			*	NULL	"MAC Status"
A_MAC_REGISTER($,R_MAC_INT_MASK)		*	NULL	"Interrupt Mask"
A_MAC_REGISTER($,R_MAC_TXD_CTL)			*	NULL	"TXD Control"
A_MAC_REGISTER($,R_MAC_MDIO)			*	NULL	"MDIO"
A_MAC_REGISTER($,R_MAC_DEBUG_STATUS)		*	NULL	"Debug Status"
!endagent

!agent DUART
A_DUART_MODE_REG_1_A        *	NULL		"Mode Register 1A"
A_DUART_MODE_REG_2_A        *	NULL		"Mode Register 2A"
A_DUART_STATUS_A            *	NULL		"Status A"
A_DUART_CLK_SEL_A           *	NULL		"Clock Select A"
A_DUART_CMD_A               *	NULL		"Command A"
A_DUART_RX_HOLD_A           *	NULL		"RX Hold A"
A_DUART_TX_HOLD_A           *	NULL		"TX Hold A"

A_DUART_MODE_REG_1_B        *	NULL		"Mode Register 1B"
A_DUART_MODE_REG_2_B        *	NULL		"Mode Register 2B"
A_DUART_STATUS_B            *	NULL		"Status B"
A_DUART_CLK_SEL_B           *	NULL		"Clock Select B"
A_DUART_CMD_B               *	NULL		"Command B"
A_DUART_RX_HOLD_B           *	NULL		"RX Hold B"
A_DUART_TX_HOLD_B           *	NULL		"TX Hold B"

A_DUART_INPORT_CHNG         *	NULL		"Input Port Change"
A_DUART_AUX_CTRL	    *	NULL		"Aux Control"
A_DUART_ISR_A               *	NULL		"ISR A"
A_DUART_IMR_A               *	NULL		"IMR A"
A_DUART_ISR_B               *	NULL		"ISR B"
A_DUART_IMR_B               *	NULL		"IMR B"
A_DUART_OUT_PORT            *	NULL		"Output Port"
A_DUART_OPCR		    *	NULL		"OPCR"
A_DUART_IN_PORT             *	NULL		"Input Port"
A_DUART_ISR                 *	NULL		"ISR Combined"
A_DUART_IMR                 *	NULL		"IMR Combined"
A_DUART_SET_OPR             *	NULL		"Set output port"
A_DUART_CLEAR_OPR           *	NULL		"Clear output port"
A_DUART_INPORT_CHNG_A       *	NULL		"Input Port Change A"
A_DUART_INPORT_CHNG_B       *	NULL		"Input Port Change B"
!endagent


;
; GENCS is done as a single instance to avoid using up mask bits
;
!agent GENCS
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,0))          0   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,0))    0   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,0))   0   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,0))    0   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,0))    0   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,1))          1   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,1))    1   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,1))   1   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,1))    1   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,1))    1   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,2))          2   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,2))    2   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,2))   2   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,2))    2   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,2))    2   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,3))          3   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,3))    3   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,3))   3   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,3))    3   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,3))    3   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,4))          4   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,4))    4   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,4))   4   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,4))    4   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,4))    4   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,5))          5   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,5))    5   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,5))   5   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,5))    5   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,5))    5   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,6))          6   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,6))    6   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,6))   6   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,6))    6   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,6))    6   NULL	"Time Config1"

A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_CFG,7))          7   NULL	"Config"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_MULT_SIZE,7))    7   NULL	"Region Size"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_START_ADDR,7))   7   NULL	"Start Addr"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG0,7))    7   NULL	"Time Config0"
A_IO_EXT_REG(R_IO_EXT_REG(R_IO_EXT_TIME_CFG1,7))    7   NULL	"Time Config1"
!endagent

!agent GEN
A_IO_INTERRUPT_STATUS       *	NULL	"Interrupt Status"
A_IO_INTERRUPT_DATA0        *	NULL	"Interrupt Data0"
A_IO_INTERRUPT_DATA1        *	NULL	"Interrupt Data1"
A_IO_INTERRUPT_DATA2        *	NULL	"Interrupt Data2"
A_IO_INTERRUPT_DATA3        *	NULL	"Interrupt Data3"
A_IO_INTERRUPT_ADDR0        *	NULL	"Interrupt Addr0"
A_IO_INTERRUPT_ADDR1        *	NULL	"Interrupt Addr1"
A_IO_INTERRUPT_PARITY       *	NULL	"Interrupt Parity"
A_IO_DRIVE_0                *   NULL    "IO Drive 0"
A_IO_DRIVE_1                *   NULL    "IO Drive 1"
A_IO_DRIVE_2                *   NULL    "IO Drive 2"
A_IO_DRIVE_3                *   NULL    "IO Drive 3"
!endagent

!agent PCMCIA
A_IO_PCMCIA_CFG             *	NULL	"PCMCIA Config (Slot A)"
A_IO_PCMCIA_STATUS          *	NULL	"PCMCIA Status (Slot A)"
A_BCM1480_IO_PCMCIA_CFG_B   *	NULL	"PCMCIA Config (Slot B)"
A_BCM1480_IO_PCMCIA_STATUS_B *	NULL	"PCMCIA Status (Slot B)"
!endagent

!agent GPIO
A_GPIO_INT_ADD_TYPE         *	NULL	"Int Add Type"
A_GPIO_CLR_EDGE             *	NULL	"Clear Edge"
A_GPIO_INT_TYPE             *	NULL	"Int Type"
A_GPIO_INPUT_INVERT         *	NULL	"Input Invert"
A_GPIO_GLITCH               *	NULL	"Glitch"
A_GPIO_READ                 *	NULL	"Read Data"
A_GPIO_DIRECTION            *	NULL	"Direction"
A_GPIO_PIN_CLR              *	NULL	"Pin Clear"
A_GPIO_PIN_SET              *	NULL	"Pin Set"
!endagent


!agent SMBUS 0,1
A_SMB_REGISTER($,R_SMB_XTRA)	*	NULL	"Extra"
A_SMB_REGISTER($,R_SMB_FREQ)	*	NULL	"Frequency"
A_SMB_REGISTER($,R_SMB_STATUS)	*	NULL	"Status"
A_SMB_REGISTER($,R_SMB_CMD)	*	NULL	"Command"
A_SMB_REGISTER($,R_SMB_START)	*	NULL	"Start"
A_SMB_REGISTER($,R_SMB_DATA)	*	NULL	"Data"
A_SMB_REGISTER($,R_SMB_CONTROL)	*	NULL	"Control"
A_SMB_REGISTER($,R_SMB_PEC)	*	NULL	"PEC"
!endagent


!agent TIMER
A_SCD_WDOG_INIT_0           WD0		NULL	"Init"
A_SCD_WDOG_CNT_0            WD0		NULL	"Count"
A_SCD_WDOG_CFG_0            WD0		NULL	"Config"

A_SCD_WDOG_INIT_1           WD1		NULL	"Init"
A_SCD_WDOG_CNT_1            WD1		NULL	"Count"
A_SCD_WDOG_CFG_1            WD1		NULL	"Config"

A_BCM1480_SCD_WDOG_INIT_2           WD2		NULL	"Init"
A_BCM1480_SCD_WDOG_CNT_2            WD2		NULL	"Count"
A_BCM1480_SCD_WDOG_CFG_2            WD2		NULL	"Config"

A_BCM1480_SCD_WDOG_INIT_3           WD3		NULL	"Init"
A_BCM1480_SCD_WDOG_CNT_3            WD3		NULL	"Count"
A_BCM1480_SCD_WDOG_CFG_3            WD3		NULL	"Config"

A_SCD_TIMER_INIT_0          TMR0	NULL	"Init"
A_SCD_TIMER_CNT_0           TMR0	NULL	"Count"
A_SCD_TIMER_CFG_0           TMR0	NULL	"Config"

A_SCD_TIMER_INIT_1          TMR1	NULL	"Init"
A_SCD_TIMER_CNT_1           TMR1	NULL	"Count"
A_SCD_TIMER_CFG_1           TMR1	NULL	"Config"

A_SCD_TIMER_INIT_2          TMR2	NULL	"Init"
A_SCD_TIMER_CNT_2           TMR2	NULL	"Count"
A_SCD_TIMER_CFG_2           TMR2	NULL	"Config"

A_SCD_TIMER_INIT_3          TMR3	NULL	"Init"
A_SCD_TIMER_CNT_3           TMR3	NULL	"Count"
A_SCD_TIMER_CFG_3           TMR3	NULL	"Config"

A_BCM1480_SCD_ZBBUS_CYCLE_COUNT     ZB		NULL	"Count"
A_BCM1480_SCD_ZBBUS_CYCLE_CP0       ZB		NULL	"Compare 0"
A_BCM1480_SCD_ZBBUS_CYCLE_CP1       ZB		NULL	"Compare 1"
A_BCM1480_SCD_ZBBUS_CYCLE_CP2       ZB		NULL	"Compare 2"
A_BCM1480_SCD_ZBBUS_CYCLE_CP3       ZB		NULL	"Compare 3"
!endagent

!agent SCD
A_SCD_SYSTEM_REVISION       *	NULL	"System Revision"
A_SCD_SYSTEM_CFG            *	NULL	"System Config"
A_BCM1480_SCD_PERF_CNT_CFG0         *	NULL	"Perf Cnt Config0"
A_BCM1480_SCD_PERF_CNT_CFG1         *	NULL	"Perf Cnt Config1"
A_BCM1480_SCD_PERF_CNT_0            *	NULL	"Perf Counter 0"
A_BCM1480_SCD_PERF_CNT_1            *	NULL	"Perf Counter 1"
A_BCM1480_SCD_PERF_CNT_2            *	NULL	"Perf Counter 2"
A_BCM1480_SCD_PERF_CNT_3            *	NULL	"Perf Counter 3"
A_BCM1480_SCD_PERF_CNT_4            *	NULL	"Perf Counter 4"
A_BCM1480_SCD_PERF_CNT_5            *	NULL	"Perf Counter 5"
A_BCM1480_SCD_PERF_CNT_6            *	NULL	"Perf Counter 6"
A_BCM1480_SCD_PERF_CNT_7            *	NULL	"Perf Counter 7"
A_BCM1480_SCD_SCRATCH		    *   NULL    "Scratch Register"
!endagent

!agent BUSERR
A_BCM1480_BUS_ERR_STATUS_DEBUG  *	NULL	"Bus Err Status (debug)"
A_BUS_ERR_DATA_0            *	NULL	"Bus Err Data0"
A_BUS_ERR_DATA_1            *	NULL	"Bus Err Data1"
A_BUS_ERR_DATA_2            *	NULL	"Bus Err Data2"
A_BUS_ERR_DATA_3            *	NULL	"Bus Err Data3"
A_BUS_L2_ERRORS             *	NULL	"Bus L2 Errors"
A_BUS_MEM_IO_ERRORS         *	NULL	"Bus MemIO Errors"
!endagent


!agent DM
A_DM_REGISTER(0,R_DM_DSCR_BASE)		0	NULL	"Descr Base"
A_DM_REGISTER(0,R_DM_DSCR_COUNT)	0	NULL	"Descr Count"
A_DM_REGISTER(0,R_DM_CUR_DSCR_ADDR)	0	NULL	"Descr Addr"
A_DM_REGISTER(0,R_DM_DSCR_BASE_DEBUG)	0	NULL	"Descr Base Debug"

A_DM_REGISTER(1,R_DM_DSCR_BASE)		1	NULL	"Descr Base"
A_DM_REGISTER(1,R_DM_DSCR_COUNT)	1	NULL	"Descr Count"
A_DM_REGISTER(1,R_DM_CUR_DSCR_ADDR)	1	NULL	"Descr Addr"
A_DM_REGISTER(1,R_DM_DSCR_BASE_DEBUG)	1	NULL	"Descr Base Debug"

A_DM_REGISTER(2,R_DM_DSCR_BASE)		2	NULL	"Descr Base"
A_DM_REGISTER(2,R_DM_DSCR_COUNT)	2	NULL	"Descr Count"
A_DM_REGISTER(2,R_DM_CUR_DSCR_ADDR)	2	NULL	"Descr Addr"
A_DM_REGISTER(2,R_DM_DSCR_BASE_DEBUG)	2	NULL	"Descr Base Debug"

A_DM_REGISTER(3,R_DM_DSCR_BASE)		3	NULL	"Descr Base"
A_DM_REGISTER(3,R_DM_DSCR_COUNT)	3	NULL	"Descr Count"
A_DM_REGISTER(3,R_DM_CUR_DSCR_ADDR)	3	NULL	"Descr Addr"
A_DM_REGISTER(3,R_DM_DSCR_BASE_DEBUG)	3	NULL	"Descr Base Debug"
!endagent

!agent IMR 0,1,2,3
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_DIAG_H)		*	NULL	"Diag"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_DIAG_L)		*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_LDT_INTERRUPT_H)			*	NULL	"LDT Interrupt"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_LDT_INTERRUPT_L)			*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_MASK_H)		*	NULL	"Mask"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_MASK_L)		*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_TRACE_H)		*	NULL	"Trace"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_TRACE_L)		*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_SOURCE_STATUS_H)	*	NULL	"Source Status"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_SOURCE_STATUS_L)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_MAILBOX_0_CPU)			*	NULL	"Mailbox 0"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_MAILBOX_1_CPU)			*	NULL	"Mailbox 1"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+0)	*	NULL	"Status 0"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+0)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+8)	*	NULL	"Status 1"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+8)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+16)	*	NULL	"Status 2"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+16)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+24)	*	NULL	"Status 3"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+24)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+32)	*	NULL	"Status 4"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+32)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+40)	*	NULL	"Status 5"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+40)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+48)	*	NULL	"Status 6"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+48)	*	NULL	""
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_H+56)	*	NULL	"Status 7"
A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_STATUS_BASE_L+56)	*	NULL	""

; What to do about these?  64 registers?
; A_BCM1480_IMR_REGISTER($,R_BCM1480_IMR_INTERRUPT_MAP_BASE)	*	NULL	""
; R_BCM1480_IMR_INTERRUPT_MAP_COUNT       64
!endagent

;
; Not implemented in functional sim
;
; !agent ADDRTRAP
; A_ADDR_TRAP_INDEX           *	NULL	"Addr Trap Index"
; A_ADDR_TRAP_REG             *	NULL	"Addr Trap Reg"
; A_ADDR_TRAP_UP_0            *	NULL	"Addr Trap UP0"
; A_ADDR_TRAP_UP_1            *	NULL	"Addr Trap UP1"
; A_ADDR_TRAP_UP_2            *	NULL	"Addr Trap UP2"
; A_ADDR_TRAP_UP_3            *	NULL	"Addr Trap UP3"
; A_ADDR_TRAP_DOWN_0          *	NULL	"Addr Trap DOWN0"
; A_ADDR_TRAP_DOWN_1          *	NULL	"Addr Trap DOWN1"
; A_ADDR_TRAP_DOWN_2          *	NULL	"Addr Trap DOWN2"
; A_ADDR_TRAP_DOWN_3          *	NULL	"Addr Trap DOWN3"
; A_ADDR_TRAP_CFG_0           *	NULL	"Addr Trap CFG0"
; A_ADDR_TRAP_CFG_1           *	NULL	"Addr Trap CFG1"
; A_ADDR_TRAP_CFG_2           *	NULL	"Addr Trap CFG2"
; A_ADDR_TRAP_CFG_3           *	NULL	"Addr Trap CFG3"
; !endagent

; 
; Not implemented in functional simulator
; 
; !agent TRACE
; A_SCD_TRACE_CFG             *	NULL	"Trace Config"
; A_SCD_TRACE_READ            *	NULL	"Trace Read"
; A_SCD_TRACE_EVENT_0         *	NULL	"Trace Event0"
; A_SCD_TRACE_EVENT_1         *	NULL	"Trace Event1"
; A_SCD_TRACE_EVENT_2         *	NULL	"Trace Event2"
; A_SCD_TRACE_EVENT_3         *	NULL	"Trace Event3"
; A_SCD_TRACE_EVENT_4         *	NULL	"Trace Event4"
; A_SCD_TRACE_EVENT_5         *	NULL	"Trace Event5"
; A_SCD_TRACE_EVENT_6         *	NULL	"Trace Event6"
; A_SCD_TRACE_EVENT_7         *	NULL	"Trace Event7"
; A_SCD_TRACE_SEQUENCE_0      *	NULL	"Trace Seq0"
; A_SCD_TRACE_SEQUENCE_1      *	NULL	"Trace Seq1"
; A_SCD_TRACE_SEQUENCE_2      *	NULL	"Trace Seq2"
; A_SCD_TRACE_SEQUENCE_3      *	NULL	"Trace Seq3"
; A_SCD_TRACE_SEQUENCE_4      *	NULL	"Trace Seq4"
; A_SCD_TRACE_SEQUENCE_5      *	NULL	"Trace Seq5"
; A_SCD_TRACE_SEQUENCE_6      *	NULL	"Trace Seq6"
; A_SCD_TRACE_SEQUENCE_7      *	NULL	"Trace Seq7"
; !endagent

!agent PCIX
A_BCM1480_PCI_RESET           *	NULL	"PCI Reset"
A_BCM1480_PCI_DLL             *	NULL	"PCI DLL"
!endagent

!agent_nomask PMGLOBAL
A_BCM1480_PMI_GLB_0 * NULL "PMI Globals"
A_BCM1480_PMO_GLB_0 * NULL "PMO Globals"
A_BCM1480_PM_PMO_MAPPING * NULL "PMO Mapping"
!endagent

!agent_nomask PMDEBUG
A_BCM1480_PM_GLOBALDEBUGMODE_PMI * NULL "Debug mode PMI"
A_BCM1480_PM_GLOBALDEBUG_PID     * NULL "Debug PID"
A_BCM1480_PM_GLOBALDEBUG_PIB     * NULL "Debug PIB"
A_BCM1480_PM_GLOBALDEBUGMODE_PMO * NULL "Debug mode PMO"
A_BCM1480_PM_GLOBALDEBUG_POD     * NULL "Debug POD"
A_BCM1480_PM_GLOBALDEBUG_POB     * NULL "Debug POB"
!endagent

!agent_nomask PMI 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_BASE_SIZE) * NULL "Ring base and size"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_CNT) * NULL "Descriptor Count"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_PFCNT) * NULL "Descr Prefetch Count"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_LAST) * NULL "Curr Descr Addr"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_PFINDX) * NULL "Descr Prefetch Index"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_INT_WMK) * NULL "Interrupt Watermark"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_CONFIG0) * NULL "Configuration"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_LOCALDEBUG) * NULL "Local Debug"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_CACHEABILITY) * NULL "L2 Cacheability"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_INT_CNFG) * NULL "Interrupt Config"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_DESC_MERGE_TIMER) * NULL "Merge Timer"
A_BCM1480_PMI_LCL_REGISTER($,R_BCM1480_PM_LOCALDEBUG_PIB) * NULL "PMI Local Debug"
!endagent


!agent_nomask PMO 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_BASE_SIZE) * NULL "Ring base and size"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_CNT) * NULL "Descriptor Count"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_PFCNT) * NULL "Descr Prefetch Count"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_LAST) * NULL "Curr Descr Addr"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_PFINDX) * NULL "Descr Prefetch Index"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_INT_WMK) * NULL "Interrupt Watermark"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_CONFIG0) * NULL "Configuration"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_LOCALDEBUG) * NULL "Local Debug"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_INT_CNFG) * NULL "Interrupt Config"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_DESC_MERGE_TIMER) * NULL "Merge Timer"
A_BCM1480_PMO_LCL_REGISTER($,R_BCM1480_PM_LOCALDEBUG_POB) * NULL "PMO Local Debug"
!endagent

!agent_nomask HR 0,1,2
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_CFG) * NULL "Configuration"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH_DEFAULT) * NULL "Default path"

A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(0)) * NULL "RX Rule op 0"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(1)) * NULL "RX Rule op 1"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(2)) * NULL "RX Rule op 2"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(3)) * NULL "RX Rule op 3"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(4)) * NULL "RX Rule op 4"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(5)) * NULL "RX Rule op 5"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(6)) * NULL "RX Rule op 6"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(7)) * NULL "RX Rule op 7"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(8)) * NULL "RX Rule op 8"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(9)) * NULL "RX Rule op 9"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(10)) * NULL "RX Rule op 10"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(11)) * NULL "RX Rule op 11"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(12)) * NULL "RX Rule op 12"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(13)) * NULL "RX Rule op 13"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(14)) * NULL "RX Rule op 14"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_OP(15)) * NULL "RX Rule op 15"

A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(0)) * NULL "RX Rule type 0"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(1)) * NULL "RX Rule type 1"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(2)) * NULL "RX Rule type 2"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(3)) * NULL "RX Rule type 3"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(4)) * NULL "RX Rule type 4"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(5)) * NULL "RX Rule type 5"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(6)) * NULL "RX Rule type 6"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(7)) * NULL "RX Rule type 7"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(8)) * NULL "RX Rule type 8"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(9)) * NULL "RX Rule type 9"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(10)) * NULL "RX Rule type 10"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(11)) * NULL "RX Rule type 11"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(12)) * NULL "RX Rule type 12"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(13)) * NULL "RX Rule type 13"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(14)) * NULL "RX Rule type 14"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_RULE_TYPE(15)) * NULL "RX Rule type 15"

A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(0)) * NULL "RX Path 0"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(1)) * NULL "RX Path 1"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(2)) * NULL "RX Path 2"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(3)) * NULL "RX Path 3"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(4)) * NULL "RX Path 4"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(5)) * NULL "RX Path 5"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(6)) * NULL "RX Path 6"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(7)) * NULL "RX Path 7"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(8)) * NULL "RX Path 8"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(9)) * NULL "RX Path 9"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(10)) * NULL "RX Path 10"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(11)) * NULL "RX Path 11"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(12)) * NULL "RX Path 12"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(13)) * NULL "RX Path 13"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(14)) * NULL "RX Path 14"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_PATH(15)) * NULL "RX Path 15"

A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(0)) * NULL "RX Extract leaf 0"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(1)) * NULL "RX Extract leaf 1"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(2)) * NULL "RX Extract leaf 2"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(3)) * NULL "RX Extract leaf 3"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(4)) * NULL "RX Extract leaf 4"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(5)) * NULL "RX Extract leaf 5"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(6)) * NULL "RX Extract leaf 6"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(7)) * NULL "RX Extract leaf 7"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(8)) * NULL "RX Extract leaf 8"
A_BCM1480_HR_REGISTER($,R_BCM1480_HR_HA_LEAF0(9)) * NULL "RX Extract leaf 9"

!endagent

!agent_nomask PMSTAT
A_BCM1480_PMI_INT_0+0      * NULL "PMI Int Status 0..7"
A_BCM1480_PMI_INT_0+8      * NULL "PMI Int Status 9..15"
A_BCM1480_PMI_INT_0+0x10   * NULL "PMI Int Status 16..24"
A_BCM1480_PMI_INT_0+0x18   * NULL "PMI Int Status 25..31"

A_BCM1480_PMO_INT_0+0      * NULL "PMO Int Status 0..7"
A_BCM1480_PMO_INT_0+8      * NULL "PMO Int Status 9..15"
A_BCM1480_PMO_INT_0+0x10   * NULL "PMO Int Status 16..24"
A_BCM1480_PMO_INT_0+0x18   * NULL "PMO Int Status 25..31"
!endagent

!agent_nomask RXHSP 0,1,2
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(0)) * NULL "RX RAM Alloc 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(1)) * NULL "RX RAM Alloc 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(2)) * NULL "RX RAM Alloc 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(3)) * NULL "RX RAM Alloc 3"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(4)) * NULL "RX RAM Alloc 4"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(5)) * NULL "RX RAM Alloc 5"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(6)) * NULL "RX RAM Alloc 6"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PKT_RAMALLOC(7)) * NULL "RX RAM Alloc 7"
!endagent

!agent_nomask TXHSP 0,1,2
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(0)) * NULL "TX RAM Alloc 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(1)) * NULL "TX RAM Alloc 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(2)) * NULL "TX RAM Alloc 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(3)) * NULL "TX RAM Alloc 3"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(4)) * NULL "TX RAM Alloc 4"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(5)) * NULL "TX RAM Alloc 5"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(6)) * NULL "TX RAM Alloc 6"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RAMALLOC(7)) * NULL "TX RAM Alloc 7"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RXPHITCNT(0)) * NULL "RX PHITCNT 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RXPHITCNT(1)) * NULL "RX PHITCNT 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RXPHITCNT(2)) * NULL "RX PHITCNT 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_RXPHITCNT(3)) * NULL "RX PHITCNT 3"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_TXPHITCNT(0)) * NULL "TX PHITCNT 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_TXPHITCNT(1)) * NULL "TX PHITCNT 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_TXPHITCNT(2)) * NULL "TX PHITCNT 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PKT_TXPHITCNT(3)) * NULL "TX PHITCNT 3"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_HTIO_RXPHITCNT) * NULL "HTIO PHITCNT"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_HTCC_RXPHITCNT) * NULL "HTCC PHITCNT"
!endagent

!agent_nomask RXPORT 0,1,2
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_CFG_0) * NULL "RX SPI4 Config 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_CFG_1) * NULL "RX SPI4 Config 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_DESKEW_OVERRIDE) * NULL "RX SPI4 Deskew Ovr"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_DESKEW_DATAPATH) * NULL "RX SPI4 Deskew DPath"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_PORT_INT_EN) * NULL "RX SPI4 Port Int Enable"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_PORT_INT_STATUS) * NULL "RX SPI4 Port Int Stat"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_CALENDAR_0) * NULL "RX SPI4 Calendar 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI4_CALENDAR_1) * NULL "RX SPI4 Calendar 1"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_0) * NULL "RX SPI4 Watermark 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_0) * NULL "RX SPI4 Watermark 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_1) * NULL "RX SPI4 Watermark 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_2) * NULL "RX SPI4 Watermark 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_3) * NULL "RX SPI4 Watermark 3"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_4) * NULL "RX SPI4 Watermark 4"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_5) * NULL "RX SPI4 Watermark 5"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_6) * NULL "RX SPI4 Watermark 6"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_SPI_WATERMARK_7) * NULL "RX SPI4 Watermark 7"


A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_PLL_CNFG) * NULL "RX Pll Config"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_CALIBRATION) * NULL "RX Calibration"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_TEST) * NULL "RX Test"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_DIAG_DETAILS) * NULL "RX Diag Details"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_DIAG_CRC_0) * NULL "RX Diag CRC_0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_DIAG_CRC_1) * NULL "RX Diag CRC_1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_DIAG_HTCMD) * NULL "RX Diag HTCMD"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_DIAG_PKTCTL) * NULL "RX Diag Pktctl"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_RX_VIS_FLCTRL_COUNTER) * NULL "RX Vis FC Cntr"

!endagent

!agent_nomask TXPORT 0,1,2
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_CFG_0) * NULL "TX SPI4 Config 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_CFG_1) * NULL "TX SPI4 Config 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_TRAINING_FMT) * NULL "TX SPI4 Training Fmt"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_CALENDAR_0) * NULL "TX SPI4 Calendar 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_CALENDAR_1) * NULL "TX SPI4 Calendar 1"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_PLL_CNFG) * NULL "TX PLL Config"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_CALIBRATION) * NULL "TX Calibration"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_TEST) * NULL "TX Test"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_VIS_CMDQ_0) * NULL "TX Vis CMDQ 0"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_VIS_CMDQ_1) * NULL "TX Vis CMDQ 1"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_VIS_CMDQ_2) * NULL "TX Vis CMDQ 2"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_RAM_READCTL) * NULL "TX RAM ReadCtl"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_RAM_READWINDOW) * NULL "TX RAM READWINDOW"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_RF_READCTL) * NULL "TX ReadCtl"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_RF_READWINDOW) * NULL "TX ReadWindow"

A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_PORT_INT_STATUS) * NULL "TX Port Int Stat"
A_BCM1480_HSP_REGISTER($,R_BCM1480_HSP_TX_SPI4_PORT_INT_EN) * NULL "TX Port Int En"

!endagent

